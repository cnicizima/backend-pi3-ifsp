// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @unique @default(autoincrement())
  cpf        String   @id @db.Char(11)
  nome       String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  sexo       String?  @db.VarChar(30)
  telefone   String   @db.VarChar(15)
  nascimento DateTime @db.Date
  password   String   @db.VarChar(255)
  isAdmin    Boolean  @default(false)
  avatar     String?  @db.Text // url da imagem. Se for postar foto, precisa verificar o tipo certo.

  enderecos  Endereco[]
  pedidos    Pedido[]
  avaliacoes Avaliacao[]
  favoritos  Favoritos[]
  mensagens  Mensagem[]
}

model Endereco {
  idEndereco  Int     @id @default(autoincrement())
  usuarioCpf  String  @db.Char(11)
  apelido     String  @db.VarChar(100)
  cep         String  @db.Char(8)
  rua         String  @db.VarChar(255)
  numero      String  @db.VarChar(10)
  complemento String? @db.VarChar(255)
  cidade      String  @db.VarChar(255)
  estado      String  @db.Char(2)
  bairro      String  @db.VarChar(255)

  usuario User @relation(fields: [usuarioCpf], references: [cpf])

  pedidos Pedido[]
}

model Pedido {
  idPedido   Int      @id @default(autoincrement())
  usuarioCpf String   @db.Char(11)
  idEndereco Int
  valorTotal Decimal  @db.Decimal(10, 2)
  status     String   @db.VarChar(100)
  dataCompra DateTime @default(now())
  idCupom    Int?

  usuario   User       @relation(fields: [usuarioCpf], references: [cpf])
  endereco  Endereco   @relation(fields: [idEndereco], references: [idEndereco])
  pagamento Pagamento?
  cupom     Cupom?     @relation(fields: [idCupom], references: [idCupom])

  produtos PedidoProduto[]
}

model Pagamento {
  idPagamento   Int       @id @default(autoincrement())
  idPedido      Int       @unique
  metodo        String    @db.VarChar(100)
  status        String    @db.VarChar(100)
  valorPago     Decimal   @db.Decimal(10, 2)
  dataPagamento DateTime?

  pedido Pedido @relation(fields: [idPedido], references: [idPedido])
}

model Produto {
  idProduto      Int     @id @default(autoincrement())
  fotoVinho      String? @db.Text //url da foto
  nome           String  @db.VarChar(255)
  descricao      String  @db.Text
  preco          Decimal @db.Decimal(10, 2)
  classificacao  Decimal @db.Decimal(3, 2)
  categoria      String  @db.VarChar(50)
  gustativo      String? @db.Text
  olfativo       String? @db.Text
  regiao         String? @db.VarChar(150)
  amadurecimento String? @db.Text
  analises       String? @db.Text
  uvas           String? @db.VarChar(255)
  temperatura    String? @db.VarChar(50)

  estoque    Estoque?
  avaliacoes Avaliacao[]
  favoritos  Favoritos[]
  pedidos    PedidoProduto[]
}

model Estoque {
  idEstoque  Int @id @default(autoincrement())
  idProduto  Int @unique
  quantidade Int @default(0) @db.Int

  produto Produto @relation(fields: [idProduto], references: [idProduto])
}

model PedidoProduto {
  idPedidoProduto Int     @id @default(autoincrement())
  idPedido        Int
  idProduto       Int
  quantidade      Int     @db.Int
  valorItem       Decimal @db.Decimal(10, 2)

  pedido  Pedido  @relation(fields: [idPedido], references: [idPedido])
  produto Produto @relation(fields: [idProduto], references: [idProduto])
}

model Favoritos {
  idFavorito Int    @id @default(autoincrement())
  usuarioCpf String @db.Char(11)
  idProduto  Int

  usuario User    @relation(fields: [usuarioCpf], references: [cpf])
  produto Produto @relation(fields: [idProduto], references: [idProduto])
}

model Avaliacao {
  idAvaliacao Int      @id @default(autoincrement())
  usuarioCpf  String   @db.Char(11)
  idProduto   Int
  avaliacao   Decimal  @db.Decimal(2, 1)
  conteudo    String?  @db.Text
  dataCriacao DateTime @default(now())

  usuario User    @relation(fields: [usuarioCpf], references: [cpf])
  produto Produto @relation(fields: [idProduto], references: [idProduto])
}

model Mensagem {
  idMensagem  Int      @id @default(autoincrement())
  usuarioCpf String   @db.Char(11)
  assunto    String   @db.VarChar(255)
  conteudo   String   @db.Text
  dataEnvio  DateTime @default(now())

  usuario User @relation(fields: [usuarioCpf], references: [cpf])
}

model Cupom {
  idCupom  Int      @id @default(autoincrement())
  codigo   String   @unique @db.VarChar(50)
  desconto Decimal  @db.Decimal(5, 2)
  pedidos  Pedido[]
}
